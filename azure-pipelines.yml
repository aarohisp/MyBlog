trigger:
  branches:
    include:
      - main # Trigger on changes to the main branch

resources:
  repositories:
    - repository: MyBlogRepo
      type: github
      name: aarohisp/MyBlog
      endpoint: GitHub-Connection

variables:
  # AKS variables
  ACR_NAME: "mernblogregistry"
  RESOURCE_GROUP: "Mern_blog"
  AKS_CLUSTER: "MernBlog"
  IMAGE_NAME: "myblog-static-site"
  TAG: "$(Build.BuildId)"  # Unique tag for the image

stages:
  - stage: Package
    displayName: "Package Static Files"
    jobs:
      - job: PackageFiles
        displayName: "Package HTML/CSS/JS into a Container Image"
        steps:
          - checkout: self

          - task: Bash@3
            displayName: "Create Dockerfile for Static Site"
            inputs:
              targetType: "inline"
              script: |
                echo "FROM nginx:alpine" > Dockerfile
                echo "COPY index.html /usr/share/nginx/html/" >> Dockerfile
                echo "COPY style.css /usr/share/nginx/html/" >> Dockerfile
                echo "COPY script.js /usr/share/nginx/html/" >> Dockerfile

          - task: AzureCLI@2
            displayName: "Build and Push to Azure Container Registry"
            inputs:
              azureSubscription: "azure-connection" 
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az acr build --registry $(ACR_NAME) --image $(IMAGE_NAME):blue-$(TAG) .
                az acr build --registry $(ACR_NAME) --image $(IMAGE_NAME):green-$(TAG) .

  - stage: Deploy
    dependsOn: Package
    displayName: "Deploy to AKS"
    jobs:
      - job: DeployToAKS
        displayName: "Deploy Static Site to AKS"
        steps:
          - task: AzureCLI@2
            displayName: "Login to AKS Cluster"
            inputs:
              azureSubscription: "azure-connection"
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az aks get-credentials --resource-group $(RESOURCE_GROUP) --name $(AKS_CLUSTER)

          - task: KubernetesManifest@0
            displayName: "Apply Blue Deployment"
            inputs:
              action: "apply"
              namespace: "default"
              manifests: "manifests/deployment.yaml"
              containers: |
                $(ACR_NAME).azurecr.io/$(IMAGE_NAME):blue-$(TAG)

          - task: KubernetesManifest@0
            displayName: "Apply Green Deployment"
            inputs:
              action: "apply"
              namespace: "default"
              manifests: "manifests/deployment.yaml"
              containers: |
                $(ACR_NAME).azurecr.io/$(IMAGE_NAME):green-$(TAG)

          - script: |
              echo "Deployment completed successfully"
            displayName: "Deployment Confirmation"
